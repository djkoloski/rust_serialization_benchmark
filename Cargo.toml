[workspace]
members = [
    "pages",
    "tools/bencher",
    "tools/formatter",
    "tools/parser",
    "tools/schema",
]

[workspace.package]
version = "0.1.0"
authors = ["David Koloski <djkoloski@gmail.com>"]
edition = "2021"
license = "MIT"
publish = false

[workspace.dependencies]
cargo_metadata = "0.15"
clap = "4"
enum-iterator = "0.8"
fixed-map = { version = "0.9", default-features = false }
regex = "1.10"
schema = { path = "tools/schema" }
serde = "1.0"
serde_json = "1.0"
stylist = { version = "0.12", default-features = false }
tempfile = "3.10"
time = "0.3"
wasm-bindgen = "0.2"
web-sys = "0.3.69"
yew = { version = "0.20", default-features = false }

[package]
name = "rust_serialization_benchmark"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
publish.workspace = true
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# Some features may require multiple dependencies to compile properly
# For example, benchmarking bincode requires two features: "serde" and "bincode"
[dependencies]
bilrost = { version = "=0.1012.2", optional = true }
bincode1 = { package = "bincode", version = "=1.3.3", optional = true }
# Can't call it bincode2 because of a current issue of bincode2
bincode = { package = "bincode", version = "=2.0.0-rc.3", optional = true }
bitcode = { version = "=0.6.4", optional = true }
borsh = { version = "=1.5.3", features = ["derive"], optional = true }
capnp = { version = "=0.20.3", optional = true }
cbor4ii = { version = "=0.3.3", features = [
    "use_std",
    "serde1",
], optional = true }
ciborium = { version = "=0.2.2", optional = true }
databuf = { version = "=0.5.0", optional = true }
dlhn = { version = "=0.1.7", optional = true }
flatbuffers = { version = "=24.12.23", optional = true }
minicbor = { version = "=0.25.1", optional = true, features = [
    "alloc",
    "derive",
] }
msgpacker = { version = "=0.4.5", optional = true }
nachricht-serde = { version = "=0.4.0", optional = true }
nanoserde = { version = "=0.1.37", optional = true }
parity-scale-codec = { version = "=3.6.12", features = [
    "full",
], optional = true }
parity-scale-codec-derive = { version = "=3.6.12", optional = true }
postcard = { version = "=1.1.1", features = ["alloc"], optional = true }
pot = { version = "=3.0.1", optional = true }
prost = { version = "=0.13.4", optional = true }
rkyv = { version = "=0.8.9", optional = true }
rmp-serde = { version = "=1.3.0", optional = true }
ron = { version = "=0.8.1", optional = true }
savefile = { version = "=0.18.5", optional = true }
savefile-derive = { version = "=0.18.5", optional = true }
serde_bare = { version = "=0.5.0", optional = true }
serde-brief = { version = "=0.1.0", features = ["std"], optional = true }
serde_cbor = { version = "=0.11.2", optional = true }
serde_json = { version = "=1.0.134", features = [
    "float_roundtrip",
], optional = true }
simd-json = { version = "=0.14.3", optional = true }
simd-json-derive = { version = "=0.15.0", optional = true }
speedy = { version = "=0.8.7", optional = true }
wiring = { version = "=0.2.2", optional = true }

criterion = "=0.5.1"
libflate = "=2.1.0"
pprof = { version = "=0.14.0", features = ["flamegraph"], optional = true }
rand = "=0.8.5"
serde = { version = "=1.0.216", features = ["derive"] }
zstd = "=0.13.2"

[features]
default = ["default-encoding-set", "measure-compression"]
default-encoding-set = [
    "bilrost",
    "bincode1",
    "bincode",
    "bitcode",
    "borsh",
    "capnp",
    "cbor4ii",
    "ciborium",
    "databuf",
    "dlhn",
    "flatbuffers",
    "minicbor",
    "msgpacker",
    "nachricht-serde",
    "nanoserde",
    "postcard",
    "pot",
    "prost",
    "rkyv",
    "rmp-serde",
    "ron",
    "savefile",
    "scale",
    "serde_bare",
    "serde-brief",
    "serde_cbor",
    "serde_json",
    "simd-json",
    "speedy",
    # "wiring",
]

measure-compression = []
capnp = ["dep:capnp"]
prost = ["dep:capnp", "dep:prost"]
simd-json = ["dep:simd-json", "dep:simd-json-derive"]
savefile = ["dep:savefile", "dep:savefile-derive"]
scale = ["dep:parity-scale-codec", "dep:parity-scale-codec-derive"]

# Enable these features to regenerate generated files rather than using the committed versions.
regenerate = ["regenerate-capnp", "regenerate-flatbuffers", "regenerate-prost"]
regenerate-capnp = ["dep:capnpc"]
regenerate-flatbuffers = ["dep:flatc-rust"]
regenerate-prost = ["dep:prost-build"]

[dev-dependencies]
rand_pcg = "0.3.1"

[build-dependencies]
capnp = "=0.20.3"
capnpc = { version = "=0.20.1", optional = true }
flatc-rust = { version = "=0.2.0", optional = true }
prost-build = { version = "=0.13.4", optional = true }

[[bench]]
harness = false
name = "bench"

[profile.bench]
lto = true
# Uncomment this to profile
# debug = true
